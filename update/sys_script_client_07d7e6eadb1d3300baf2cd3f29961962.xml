<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>Change the options in the 'What needed' choice list based on the selected request type</description>
        <field>u_request_type</field>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Control What Needed Choices</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading, isTemplate) {
	if (isLoading || newValue === '') {
		return;
	}
	
	var whatneeded = g_form.getValue('u_what_needed');
	
	g_form.clearOptions('u_what_needed');
	var depts = [
		{ id: 'hr', name: 'Human Resources', num: 2 },
		{ id: 'legal', name: 'Legal', num: 2 },
		{ id: 'facilities', name: 'Facilities', num: 2 },
		{ id: 'your_choice', name: 'Your Department Choice', num: 2 },
		{ id: 'other', name: 'Other', num: 1 }
	];
	
	for (var i=0; i<depts.length; i++) {
		for (var j=0; j<depts[i].num; j++) {
			var val = depts[i].id + (depts[i].num > 1 ? (j + 1) : '');
			var label = depts[i].name + (depts[i].num > 1 ? (j + 1) : '');
			g_form.addOption('u_what_needed', val, label);
		}
	}
	
	if (!NodeList.prototype.filter) {
		NodeList.prototype.filter = function(cb) {
			var out = [];
			for (var i=0; i<this.length; i++) {
				if (cb(this[i], i, this)) {
					out.push(this[i]);
				}
			}
			return out;
		};
	}
	
	function getElementByFieldName(fieldName) {
		return g_form.getElement(g_form.getTableName() + '.' + fieldName);
	}
	
	var requestType = newValue;
	var whatNeeded = getElementByFieldName('u_what_needed');
	var whatNeededChoiceOptions = whatNeeded.querySelectorAll('option');

	var filteredOptions = whatNeededChoiceOptions.filter(function(option) {
		return option.value.indexOf(requestType) === -1 && option.value.indexOf('other') === -1;
	});
	
	for (var i=0; i<filteredOptions.length; i++) {
		g_form.removeOption('u_what_needed', filteredOptions[i].value);
	}
	
	// If the form is loading and it is not a new record, set the u_what_needed value to the
	// value from the record before it was loaded
	if(isLoading && !g_form.isNewRecord()){
		g_form.setValue('u_what_needed', whatneeded);
	}
}]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-12 00:46:15</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>07d7e6eadb1d3300baf2cd3f29961962</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>Control What Needed Choices</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_client_07d7e6eadb1d3300baf2cd3f29961962</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-12 23:58:13</sys_updated_on>
        <table>x_58872_needit_needit</table>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
